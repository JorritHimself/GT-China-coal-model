renv::init()
install.packages("renv")
renv::init()
scriptpath <-  here("r data prep scripts")
### clear env
rm(list = ls())
### Libraries
library(readr)
library(stringr)
library(readxl)
library(openxlsx)
library(tidyverse)
library(here)
# Data source and save paths
scriptpath <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/data prep scripts in R")
build.output.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Build v12 provs")
build.archive.path <-  file.path(build.output.path, "archive")
build.input.path <-  file.path(build.output.path, "input prepped")
scriptpath <-  here("r data prep scripts")
# Data source and save paths
scriptpath <-  here("r data prep scripts")
source('C:/Users/jorri/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/r data prep scripts/1 Network build prep v12.R', echo=TRUE)
renv:init()
renv::init()
##########################          Todo         ####################################
##########################          Remember         ####################################
# FOB 5500 for Hebei mines has a weird thermal value; 4500 net and 4760 gross
# Currently using a 0.95 conversion from gross to net CV for Mongolian thermal coals
##### clear env ####
rm(list = ls())
#### Directories
# Basepath, checks if it home or not
if (dir.exists("E:/OneDrive")) {basepath <- "E:/OneDrive/Work"}
if (dir.exists("C:/Users/jorri/OneDrive")) {basepath <- "C:/Users/jorri/OneDrive/Work"}
# Data source and save paths
scriptpath <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/data prep scripts in R")
build.output.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Build v12 provs")
build.archive.path <-  file.path(build.output.path, "archive")
build.input.path <-  file.path(build.output.path, "input prepped")
quality.input.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Woodmac/0 input files")
quality.output.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Woodmac/coal quality")
quality.output.archive.path <-  file.path(quality.output.path, "archive")
### Libraries
library(readr)
library(stringr)
library(readxl)
library(openxlsx)
library(tidyverse)
# To properly render the Chinese characters:
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
############# Import coal quality data
# get coal quality data
coal.quality.file <- file.path(quality.input.path, "all coal quality by mine and type.csv")
coal.quality.df <- read.csv(coal.quality.file, sep="\t", fileEncoding = "UTF-16LE")  # has tab as separator
# Select useful columns
coal.quality.df <- coal.quality.df %>%
select(Mine.Name, Product.Type, Product.Subtype, Coal.Brand, Quality.Metric, Value, Unit) %>%
distinct()
View(coal.quality.df)
# Save lastest version as a csv
out.file.name <- "selected coal quality data by mine and type.csv"
outfile <- file.path(build.output.path, out.file.name)
con<-file(outfile, encoding="UTF-8")
write.csv(coal.quality.df, file=con, row.names=FALSE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/0 r data prep scripts/2 Coal quality prep v12.R', echo=TRUE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/0 r data prep scripts/2 Coal quality prep v12.R', echo=TRUE)
##### clear env ####
rm(list = ls())
### Libraries
library(readr)
library(stringr)
library(readxl)
library(openxlsx)
library(tidyverse)
library(here)
# To properly render the Chinese characters:
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
# Data source and save paths
scriptpath <-  here("0 r data prep scripts")
build.input.path <-  here("1 input")
build.output.path <-  here("2 build")
# To properly render Chinese characters:
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
############# Import coal quality data
# get coal quality data
coal.quality.file <- file.path(build.input.path, "WoodMac data/selected coal quality data by mine and type.csv")
coal.quality.df <- read.csv(coal.quality.file, sep="\t", fileEncoding = "UTF-16LE")  # has tab as separator
coal.quality.df <- read.csv(coal.quality.file)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/0 r data prep scripts/2 Coal quality prep v12.R', echo=TRUE)
##########################          Todo         ####################################
# Now has all production of operating plus possible
# Prices ex transp is defined as price, minus: preparation, port, transport
# Alternatively, use price of
##### clear env ####
rm(list = ls())
#### Directories
# Basepath, checks if it home or not
if (dir.exists("E:/OneDrive")) {basepath <- "E:/OneDrive/Work"}
if (dir.exists("C:/Users/jorri/OneDrive")) {basepath <- "C:/Users/jorri/OneDrive/Work"}
# Data source and save paths
scriptpath <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/data prep scripts in R")
prod.capa.input.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Woodmac/0 input files")
quality.input.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Woodmac/0 input files")
glob.supp.curve.input.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Woodmac/global supply curves")
prod.capa.output.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Woodmac/prod capa cost and prices by mine")
build.output.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Build v12 provs")
build.input.path <-  file.path(build.output.path, "input prepped")
build.archive.path <-  file.path(build.output.path, "archive")
inflation.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/helper files")
### Libraries
library(readr)
library(stringr)
library(readxl)
library(openxlsx)
library(tidyverse)
# To properly render the Chinese characters:
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
### range of years df to expand links with constant capacities
years <- as.data.frame(list(year = 2015:2030))
########### Production capacity
############# Import coal mine data
prod.capa.file <- file.path(prod.capa.input.path, "all china coal mine data woodmac.csv")
prod.capa.df <- read.csv(prod.capa.file, sep="\t", fileEncoding = "UTF-16LE")  # has tab as separator
# Select useful columns
prod.capa.df <- prod.capa.df %>%
filter(Year>=2015) %>%
filter(Year<=2030) %>%
filter(Metric=="Production")
# Keep operating and possible capacity
prod.capa.df <- prod.capa.df %>%
filter(Operating.Status=="Operating" | Operating.Status=="Possible")
# Keep useful vars
prod.capa.summ.df <- prod.capa.df %>%
select(Mine.Name, Product.Type, Product.Subtype, Product.Market, Market.Type, Operating.Status, Year, Metric.Value..Real.)
# Save latest version as a csv
out.file.name <- "selected china coal mine data woodmac.csv"
outfile <- file.path(build.output.path, out.file.name)
con<-file(outfile, encoding="UTF-8")
write.csv(prod.capa.summ.df, file=con, row.names=FALSE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/data prep scripts in R/data prep scripts v12 provs/3 Prod capacity limits by mine v8.R', echo=TRUE)
##### clear env ####
rm(list = ls())
### Libraries
library(readr)
library(stringr)
library(readxl)
library(openxlsx)
library(tidyverse)
library(here)
# To properly render the Chinese characters:
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
# Data source and save paths
scriptpath <-  here("0 r data prep scripts")
build.input.path <-  here("1 input")
build.output.path <-  here("2 build")
# To properly render Chinese characters:
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
### range of years df to expand links with constant capacities
years <- as.data.frame(list(year = 2015:2030))
########### Production capacity
########### Production capacity
### Import coal mine data
prod.capa.file <- file.path(build.input.path, "WoodMac data/selected china coal mine data woodmac.csv")
prod.capa.df <- read.csv(prod.capa.file)
# Select useful columns
prod.capa.df <- prod.capa.df %>%
filter(Year>=2015) %>%
filter(Year<=2030) %>%
filter(Metric=="Production")
View(prod.capa.df)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/data prep scripts in R/data prep scripts v12 provs/3 Prod capacity limits by mine v8.R', echo=TRUE)
################ Cost and prices
cost.prices.file <- file.path(build.input.path, "WoodMac data/selected china coal mine data woodmac.csv")
cost.prices.df <- read.csv(cost.prices.file)
# Select useful years
cost.prices.df <- cost.prices.df %>%
filter(Year>=2015) %>%
filter(Year<=2030)
# Keep useful metrics
cost.prices.df$tokeep <- 0
cost.prices.df$tokeep <- ifelse(cost.prices.df$Group=="CostsByType", 1, cost.prices.df$tokeep)
View(cost.prices.df)
##########################          Todo         ####################################
# Now has all production of operating plus possible
# Prices ex transp is defined as price, minus: preparation, port, transport
# Alternatively, use price of
##### clear env ####
rm(list = ls())
#### Directories
# Basepath, checks if it home or not
if (dir.exists("E:/OneDrive")) {basepath <- "E:/OneDrive/Work"}
if (dir.exists("C:/Users/jorri/OneDrive")) {basepath <- "C:/Users/jorri/OneDrive/Work"}
# Data source and save paths
scriptpath <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/data prep scripts in R")
prod.capa.input.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Woodmac/0 input files")
quality.input.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Woodmac/0 input files")
glob.supp.curve.input.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Woodmac/global supply curves")
prod.capa.output.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Woodmac/prod capa cost and prices by mine")
build.output.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/Build v12 provs")
build.input.path <-  file.path(build.output.path, "input prepped")
build.archive.path <-  file.path(build.output.path, "archive")
inflation.path <-  file.path(basepath, "China Coal Import Markets Project -- SHARED/Data/helper files")
### Libraries
library(readr)
library(stringr)
library(readxl)
library(openxlsx)
library(tidyverse)
# To properly render the Chinese characters:
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
### range of years df to expand links with constant capacities
years <- as.data.frame(list(year = 2015:2030))
################ Cost and prices
cost.prices.file <- file.path(prod.capa.input.path, "all china coal mine data woodmac.csv")
cost.prices.df <- read.csv(cost.prices.file, sep="\t", fileEncoding = "UTF-16LE")  # has tab as separator
################ Cost and prices
cost.prices.file <- file.path(prod.capa.input.path, "all china coal mine data woodmac.csv")
cost.prices.df <- read.csv(cost.prices.file, sep="\t", fileEncoding = "UTF-16LE")  # has tab as separator
# Select useful years
cost.prices.df <- cost.prices.df %>%
filter(Year>=2015) %>%
filter(Year<=2030)
# Keep useful metrics
cost.prices.df$tokeep <- 0
cost.prices.df$tokeep <- ifelse(cost.prices.df$Group=="CostsByType", 1, cost.prices.df$tokeep)
cost.prices.df$tokeep <- ifelse(cost.prices.df$Group=="Prices", 1, cost.prices.df$tokeep)
cost.prices.df$tokeep <- ifelse(cost.prices.df$Group=="Royalty", 1, cost.prices.df$tokeep)
cost.prices.df <- cost.prices.df %>%
filter(tokeep==1)
# df for summarizing
cost.prices.summ.df <- cost.prices.df %>%
select(Mine.Name, Company, Product.Type, Product.Subtype, Year, Product.Market, Market.Type, Metric, Metric.Value..Nominal., Unit)
# Save latest version as a csv
out.file.name <- "selected china coal mine cost data woodmac.csv"
outfile <- file.path(build.output.path, out.file.name)
con<-file(outfile, encoding="UTF-8")
write.csv(cost.prices.summ.df, file=con, row.names=FALSE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/0 r data prep scripts/3 Prod capacity limits by mine v12.R', echo=TRUE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/0 r data prep scripts/3 Prod capacity limits by mine v12.R', echo=TRUE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/0 r data prep scripts/3 Prod capacity limits by mine v12.R', echo=TRUE)
################ Cost and prices
cost.prices.file <- file.path(build.input.path, "WoodMac data/selected china coal mine cost data woodmac.csv")
cost.prices.df <- read.csv(cost.prices.file)
View(cost.prices.df)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/0 r data prep scripts/3 Prod capacity limits by mine v12.R', echo=TRUE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/0 r data prep scripts/3 Prod capacity limits by mine v12.R', echo=TRUE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/0 r data prep scripts/4 Demand prep v12.R', echo=TRUE)
##### clear env ####
rm(list = ls())
### Libraries
library(readr)
library(stringr)
library(readxl)
library(openxlsx)
library(tidyverse)
library(here)
# To properly render the Chinese characters:
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
# Data source and save paths
scriptpath <-  here("0 r data prep scripts")
build.input.path <-  here("1 input")
build.output.path <-  here("2 build")
# To properly render Chinese characters:
Sys.setlocale(category = "LC_ALL", locale = "Chinese")
############# Production capacities
# get prod capa
prod.capa.file <- file.path(build.output.path, "prod capa cost price brand by mine latest.xlsx")
prod.capa.df <- read.xlsx(prod.capa.file)
# Coking coals only
prod.capa.summ.df <- prod.capa.df %>%
filter(prod_type!="Thermal") %>%
group_by(coal_group, year) %>%
summarise(prod_capa_Mt_tot=sum(prod_capa_Mt))
############# Coking coal demand
# get steel production data
demand.file <- file.path(build.output.path, "demand all latest.xlsx")
demand.df <- read.xlsx(demand.file)
View(demand.df)
View(prod.capa.summ.df)
############# Coking coal demand
# get steel production data
demand.file <- file.path(build.output.path, "demand all latest.xlsx")
demand.df <- read.xlsx(demand.file) %>%
select(year, steel_demand_Mt)
demand.df <- read.xlsx(demand.file) %>%
select(year, steel_demand_Mt) %>%
filter(steel_demand_Mt!=0)
############# Coking coal demand
# get steel production data
demand.file <- file.path(build.output.path, "demand all latest.xlsx")
demand.df <- read.xlsx(demand.file) %>%
select(year, steel_demand_Mt) %>%
filter(steel_demand_Mt!=0) %>%
summarise(steel_demand_Mt = sum(steel_demand_Mt))
# get steel production data
demand.file <- file.path(build.output.path, "demand all latest.xlsx")
demand.df <- read.xlsx(demand.file) %>%
select(year, steel_demand_Mt) %>%
group_by(year) %>%
summarise(steel_demand_Mt = sum(steel_demand_Mt))
############# Coking coal demand
# get steel production data
demand.file <- file.path(build.output.path, "demand all latest.xlsx")
demand.df <- read.xlsx(demand.file) %>%
select(year, steel_demand_Mt) %>%
group_by(year) %>%
summarise(steel_demand_Mt = sum(steel_demand_Mt))
demand.df$HCC <- steel_demand_Mt*0.599
demand.df$SCC <- steel_demand_Mt*0.182
demand.df$PCI <- steel_demand_Mt*0.185
############# Coking coal demand
# get steel production data
demand.file <- file.path(build.output.path, "demand all latest.xlsx")
demand.df <- read.xlsx(demand.file) %>%
select(year, steel_demand_Mt) %>%
group_by(year) %>%
summarise(steel_demand_Mt = sum(steel_demand_Mt))
demand.df$HCC <- demand.df$steel_demand_Mt*0.599
demand.df$SCC <- demand.df$steel_demand_Mt*0.182
demand.df$PCI <- demand.df$steel_demand_Mt*0.185
############# Coking coal demand
# get steel production data
demand.file <- file.path(build.output.path, "demand all latest.xlsx")
demand.df <- read.xlsx(demand.file) %>%
select(year, steel_demand_Mt) %>%
group_by(year) %>%
summarise(steel_demand_Mt = sum(steel_demand_Mt))
demand.df$HCC <- demand.df$steel_demand_Mt*0.599
demand.df$SCC <- demand.df$steel_demand_Mt*0.182
demand.df$PCI <- demand.df$steel_demand_Mt*0.185
demand.df <- demand.df %>%
select(-steel_demand_Mt) %>%
pivot_longer(-year)
### Join
corr.fact.df <- left_join(prod.capa.summ.df, demand.df, by = c("coal_group", "year"))
# get steel production data
demand.file <- file.path(build.output.path, "demand all latest.xlsx")
demand.df <- read.xlsx(demand.file) %>%
select(year, steel_demand_Mt) %>%
group_by(year) %>%
summarise(steel_demand_Mt = sum(steel_demand_Mt))
demand.df$HCC <- demand.df$steel_demand_Mt*0.599
demand.df$SCC <- demand.df$steel_demand_Mt*0.182
demand.df$PCI <- demand.df$steel_demand_Mt*0.185
demand.df <- demand.df %>%
select(-steel_demand_Mt) %>%
pivot_longer(-year, names_to="coal_group")
### Join
corr.fact.df <- left_join(prod.capa.summ.df, demand.df, by = c("coal_group", "year"))
View(corr.fact.df)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/0 r data prep scripts/5 prod capa feasibility fix v12.R', echo=TRUE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/4 Process solution.R', echo=TRUE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/4 Process solution.R', echo=TRUE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/4 Process solution.R', echo=TRUE)
source('E:/OneDrive/Work/China Coal Import Markets Project -- SHARED/git/GT-China-coal-model/4 Process solution.R', echo=TRUE)
